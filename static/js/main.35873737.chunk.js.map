{"version":3,"sources":["Services/socket.js","Components/ChatMenuItem/index.js","Components/ChatMenuItem/ChatMenuItem.jsx","Components/ChatMenu/index.js","Components/ChatMenu/ChatMenu.jsx","Components/Message/index.js","Components/Message/Message.jsx","Components/ChatHistory/ChatHistory.jsx","Components/ChatInput/ChatInput.jsx","Components/Header/index.js","Components/Header/Header.jsx","Components/ChatContainer/index.js","Components/ChatContainer/ChatContainer.jsx","Services/http.js","Pages/ChatPage/index.js","Pages/ChatPage/ChatPage.jsx","Components/LoginContainer/index.js","Components/LoginContainer/LoginContainer.jsx","Pages/LoginPage/index.js","Pages/LoginPage/LoginPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["socket","apiUrlRoot","process","ChatMenuItem","props","lastMessage","messages","length","body","msg","substring","from","className","onClick","selectUser","to","ChatMenu","user","id","console","log","chats","users","filter","u","map","index","Message","messageClass","message","useState","stateClass","setClass","isCropped","setIsCropped","setToMax","clss","ChatHistory","chatHistory","data","ChatInput","onKeyDown","send","placeholder","Header","name","ChatContainer","Http","axiosInstance","instance","axios","create","baseURL","headers","this","url","Promise","resolve","reject","get","then","res","result","catch","err","ChatPage","history","setHistory","setMessages","setUsers","setTo","useEffect","isLogged","cb","WebSocket","onopen","onmessage","onclose","event","onerror","error","connect","JSON","parse","groupByTo","anonymousGet","unshift","arr","reduce","rv","x","k","push","keyCode","stringify","sendMsg","target","value","LoginContainer","type","onChange","fieldChange","login","LoginPage","App","setId","setLogged","preventDefault","basename","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35873737.chunk.js","sourcesContent":["var socket = null\r\n\r\nvar apiUrlRoot = process.env.REACT_APP_APIURL;\r\n\r\nlet connect = (cb, id = \"\") => {\r\n  console.log(\"Attempting to connect\");\r\n  if (socket == null && id !== \"\")  {\r\n    socket = new WebSocket(`ws:${apiUrlRoot}/ws?id=${id}`)\r\n  } else if (socket == null) {\r\n    socket = new WebSocket(`ws:${apiUrlRoot}/ws`)\r\n  }\r\n  socket.onopen = () => {\r\n    console.log(\"Connected succesfully\");\r\n  };\r\n\r\n  socket.onmessage = (msg) => {\r\n    console.log(msg);\r\n    cb(msg);\r\n  };\r\n\r\n  socket.onclose = event => {\r\n    console.log(\"Socket closed the connection: \", event);\r\n  };\r\n\r\n  socket.onerror = error => {\r\n    console.log(\"Socket Error: \", error);\r\n  };\r\n}\r\n\r\nlet sendMsg = (msg, from = \"\", to = \"all\") => {\r\n  console.log(\"sending msg: \", to, msg);\r\n  let body = JSON.stringify({from,to,msg});\r\n  socket.send(body);\r\n  console.log(\"sent\");\r\n}\r\n\r\nexport { connect, sendMsg };","import ChatMenuItem from './ChatMenuItem.jsx'\r\n\r\nexport default ChatMenuItem","import React from 'react'\r\nimport './ChatMenuItem.scss'\r\n\r\nconst ChatMenuItem = props => {\r\n  let lastMessage = props.messages ? props.messages[props.messages.length - 1]?.body : null;\r\n  let msg = (lastMessage?.msg ?? \"\").substring(0, 25);\r\n  let from = (lastMessage ?? \"\")?.from;\r\n  const selectUser = () => {\r\n    props.selectUser(props.to)\r\n  }\r\n  return (\r\n    <div className=\"Item\" onClick={selectUser}>\r\n      <h4>{props.to !== \"all\" ? props.to : \"General\"}</h4>\r\n      <p>{`${from ? from + \":\" : \"\"} ${msg}`}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatMenuItem","import ChatMenu from './ChatMenu.jsx'\r\n\r\nexport default ChatMenu","import React from 'react'\r\nimport ChatMenuItem from '../ChatMenuItem'\r\nimport './ChatMenu.scss'\r\n\r\nconst ChatMenu = props => {\r\n  let user = props.id || \"User\"\r\n  console.log(\"Chat Menu props: \", props);\r\n  let chats = props.users.filter(u => u !== props.id).map((u, index) => (\r\n    <ChatMenuItem key={index} to={u} messages={props.messages[u]} selectUser={props.selectUser}/>\r\n  ));\r\n  return (\r\n    <div className=\"ChatMenu\">\r\n      <h2>{user}</h2>\r\n      {/* <input type=\"text\" placeholder=\"Search\"/> */}\r\n      {chats}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatMenu","import Message from './Message.jsx'\r\n\r\n\r\nexport default Message","import React, {useState} from 'react'\r\nimport './Message.scss'\r\n\r\nconst Message = props => {\r\n  let messageClass = props.message.from === props.id ? \"Message me\" : \"Message\";\r\n  let [stateClass, setClass] = useState(messageClass);\r\n  let [isCropped, setIsCropped] = useState(props.message.msg.length > 256)\r\n  const setToMax = () => {\r\n    let clss = `${messageClass} max`\r\n    setIsCropped(false)\r\n    setClass(clss)\r\n  }\r\n  const seeMore = () => {\r\n    return isCropped ? \r\n      <p>{props.message.msg.substring(0, 255)}... <button onClick={setToMax}>See more</button></p> \r\n    : <p>{props.message.msg} </p>\r\n  }\r\n  return (\r\n    <div className={stateClass}>{seeMore()}</div>\r\n  );\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport './ChatHistory.scss'\r\nimport Message from '../Message';\r\n\r\nconst ChatHistory = props => {\r\n  let messages = (props.chatHistory ?? []).map((data, index) => {\r\n    return (\r\n    <Message key={index} id={props.id} message={data.body} />\r\n  )});\r\n  return (\r\n    <div className=\"ChatHistory\">\r\n      {messages}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatHistory","import React from 'react'\r\nimport './ChatInput.scss'\r\n\r\nconst ChatInput = props => {\r\n  return (\r\n    <div className=\"ChatInput\">\r\n      <input onKeyDown={props.send} placeholder=\"Type a message, Hit Enter to send...\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatInput","import Header from './Header.jsx'\r\n\r\nexport default Header","import React from \"react\"\r\nimport \"./Header.scss\"\r\n\r\n\r\nconst Header = props => (\r\n  <div className=\"header\">\r\n    <h2>{props.name || \"General\"}</h2>\r\n  </div>\r\n)\r\n\r\nexport default Header","import ChatContainer from './ChatContainer.jsx'\r\n\r\nexport default ChatContainer","import React from 'react'\r\nimport ChatHistory from '../ChatHistory/ChatHistory'\r\nimport ChatInput from '../ChatInput/ChatInput'\r\nimport Header from '../Header'\r\nimport './ChatContainer.scss'\r\n\r\nconst ChatContainer = props => {\r\n  return (\r\n    <div className=\"ChatContainer\">\r\n      <Header name={props.to}/>\r\n      <ChatHistory id={props.id} chatHistory={props.chatHistory} />\r\n      <ChatInput send={props.send} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatContainer","import axios from 'axios';\r\n\r\nclass httpClient {\r\n  axiosInstance = null;\r\n  apiUrlRoot = process.env.REACT_APP_APIURL;\r\n\r\n  constructor() {\r\n    const instance = axios.create({\r\n      baseURL: \"/\",\r\n      headers: { \r\n        'Connection': 'keep-alive'\r\n      }\r\n    });\r\n    this.axiosInstance = instance;\r\n  }\r\n  anonymousGet(url) {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n      .get(this.apiUrlRoot + url)\r\n        .then((res) => {\r\n          const result = res.data;\r\n          resolve(result);\r\n        })\r\n        .catch((err) => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nconst Http = new httpClient();\r\nexport default Http;\r\n","import ChatPage from './ChatPage.jsx'\r\n\r\nexport default ChatPage","import React, {useState, useEffect} from 'react'\r\nimport { connect, sendMsg } from \"../../Services/socket\"\r\nimport ChatMenu from \"../../Components/ChatMenu\"\r\nimport ChatContainer from \"../../Components/ChatContainer\"\r\nimport { Redirect } from 'react-router-dom'\r\nimport './ChatPage.scss'\r\nimport Http from '../../Services/http'\r\n\r\nconst ChatPage = props => {\r\n  const [history, setHistory] = useState([]);\r\n  const [messages, setMessages] = useState({});\r\n  const [users, setUsers] = useState([]);\r\n  const [to, setTo] = useState(\"all\");\r\n  useEffect(() => {\r\n    if (props.isLogged) {\r\n      connect((msg) => {\r\n        let data = JSON.parse(msg.data);\r\n        if (data.body.to === props.id) {\r\n          data.body.to = data.body.from;\r\n        }\r\n        setHistory([...history, data]);\r\n      }, props.id);\r\n    }\r\n    console.log(\"History: \", history);\r\n  });\r\n  useEffect(() => {\r\n    setMessages(groupByTo(history));\r\n    Http.anonymousGet(\"/clients\")\r\n      .then((res => {\r\n        res.unshift('all');\r\n        setUsers(res);\r\n      }))\r\n      .catch(err => console.error(err));\r\n  }, [history])\r\n  const send = (event) => {\r\n    if (event.keyCode === 13) {\r\n      sendMsg(event.target.value, props.id, to);\r\n      event.target.value = \"\";\r\n    }\r\n  };\r\n  const groupByTo = (arr) => {\r\n    return arr.reduce(function(rv, x) {\r\n      let k = x.body.to;\r\n      (rv[k] = rv[k] || []).push(x);\r\n      return rv;\r\n    }, {});\r\n  }\r\n  const selectUser = (user) => {\r\n    setTo(user);\r\n  }\r\n  return props.isLogged ? (\r\n    <div className=\"Chat\">\r\n      <ChatMenu id={props.id} users={users} messages={messages} selectUser={selectUser}/>\r\n      <ChatContainer id={props.id} to={to !== \"all\" ? to : \"General\"} chatHistory={messages[to]} send={send} />\r\n    </div>\r\n  ) : ( <Redirect to=\"/react-chat-app/login\" />)\r\n}\r\n\r\nexport default ChatPage","import LoginContainer from './LoginContainer.jsx'\r\n\r\nexport default LoginContainer","import React from 'react'\r\nimport './LoginContainer.scss'\r\n\r\nconst LoginContainer = props => {\r\n  return (\r\n    <div className=\"LoginContainer\">\r\n      <h2>Welcome to Realtime chat!</h2>\r\n      <h3>Enter your nickname:</h3>\r\n      <input type=\"text\" value={props.id} onChange={props.fieldChange} placeholder=\"Write here...\"/>\r\n      <button onClick={props.login} >Login</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginContainer","import LoginPage from './LoginPage.jsx'\r\n\r\nexport default LoginPage","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport LoginContainer from '../../Components/LoginContainer'\r\nimport './LoginPage.scss'\r\n\r\nconst LoginPage = props => {\r\n  return !props.isLogged ? (\r\n    <LoginContainer id={props.id} login={props.login} fieldChange={props.fieldChange} />\r\n  ) : <Redirect to=\"/react-chat-app/\" />\r\n}\r\n\r\nexport default LoginPage","import {useState} from 'react'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport ChatPage from './Pages/ChatPage'\nimport LoginPage from './Pages/LoginPage'\nimport './App.css'\n\nfunction App() {\n  let [id, setId] = useState(\"\")\n  let [isLogged, setLogged] = useState(false)\n\n  const login = (event) => {\n    console.log(id);\n    if (id) {\n      setLogged(true);\n    }\n    event.preventDefault();\n  }\n  const fieldChange = (event) => {\n    setId(event.target.value);\n  }\n  return (\n    <BrowserRouter basename=\"/react-chat-app\">\n      <Switch>\n        <Route path=\"/\" render={(props) => (<ChatPage id={id} isLogged={isLogged}/>)} />\n        <Route path=\"/login\" render={(props) => (<LoginPage id={id} login={login} fieldChange={fieldChange} isLogged={isLogged} />)} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}